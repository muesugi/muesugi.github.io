(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{206:function(e,t,a){"use strict";a.r(t);var o=a(0),n=a.n(o),i=a(55),l=a(13);t.default=()=>n.a.createElement(i.a,{image:l.a+"portfolio/adapt/adapt-on-mac.png",subtitle:"a course project for CS32 Software Engineering - Spring 2017",title:"Adapt Translations",id:"adapt",siteLink:"http://adapt-translations.herokuapp.com/"},n.a.createElement("div",{className:"portfolio-header"},"The Problem"),n.a.createElement("div",null,"Most translators work with a disorganized workspace with multiple documents and tabs. While some have attempted to find software that will assist them in translation, often these push automatic translations onto the translator that may only be a nuisance, and translators end up returning to the messy but familiar work configuration of multiple open windows."),n.a.createElement("div",{className:"portfolio-header"},"Research"),n.a.createElement("div",null,"Our four-person team started the creation process by reaching out to faculty and students in the Comparative Literature department. By surveying them about their current translation-related behaviors, we learned that most just open two separate windows for their two documents, as well as other windows for online translation resources, but wish they had a better workflow."),n.a.createElement("div",{className:"portfolio-header"},"Technical Overview"),n.a.createElement("img",{src:l.a+"portfolio/adapt/adapt-translations-2.gif"}),n.a.createElement("div",null,"We decided to create a visual application that would display how two documents aligned without the user having to manually remember or find these links between documents."),n.a.createElement("div",null,"As the only person on the team with front-end experience, I became the lead front-end developer on the project. Here are some of the most interesting features of the front-end that I implemented:"),n.a.createElement("ul",null,n.a.createElement("li",null,"Optional matched scrolling through the two documents; scroll on one side and scroll proportionately through the other"),n.a.createElement("li",null,"The ability to load documents from files, save and reload old projects"),n.a.createElement("li",null,"Integration with the popular TinyMCE text editor for a familiar interface"),n.a.createElement("li",null,"Integration with Google Open Authentication (OAuth 2.0) for user accounts")),n.a.createElement("div",{className:"portfolio-header"},"Design and Technical Decisions"),n.a.createElement("div",null,"Where most of the backend work was focused on computationally determining which paragraphs would link together (ie; which paragraph(s), if any, of the original document corresponded for a given translated paragraph), the front-end work involved showing and making use of this information in ways that would be intuitive to the user. This meant making the following functionality available to the user:",n.a.createElement("ul",null,n.a.createElement("li",null,"Adding or removing links between paragraphs"),n.a.createElement("li",null,"Scrolling through both documents with the links in mind (ie; keeping linked paragraphs aligned), or scrolling through just one document"),n.a.createElement("li",null,"Given one paragraph, finding the paragraph that corresponds to that paragraph in the other document")),"Here are some of the key design choices to facilitate and make users aware of these functionalities."),n.a.createElement("div",{className:"portfolio-subheader highlight-text"},"Key Design Choice 1: Parallelism"),n.a.createElement("div",null,"From a technological point of view, the translation document should appear larger or more prominently than the original document: only the translation is editable or manipulable, and the editor's tools take up space, making the actual display area of the translation document even smaller than that of the original document."),n.a.createElement("p",null,"However, an explicit design decision was made to keep the two documents (original and translation) styled as similarly as possible. In the user's mental model, the two documents have a one-to-one correspondence of meaning, which means that the documents themselves should be comparable elements; that is, they should appear the same other than the text that is displayed within. To make the two documents, one is a simple div and the other an iframe text editor, appear to be of the same kind was a challenge."," "),n.a.createElement("p",null,"While most styling (titles, selectors, etc) could simply be matched between the two documents, there was not much to be done about a text height difference between the two documents because of the editorâ€™s tools. Rather than adding width to the translation document (which would make the same amount of text have a different height between the two documents) or compensating by making the translation document longer, I decided to simply cut off the scroll bar and text area to keep the overall look the same. By filling in the missing part of the scroll bar with the background color, I keep the design cohesive and the two documents in parallel."),n.a.createElement("div",{className:"portfolio-subheader highlight-text"},"Key Design Choice 2: Color"),n.a.createElement("div",null,"While the site overall uses mostly neutral colors (blue, beige, white), the paragraph links are generated colors. This coloring and central placement on the page allow the links to be the most prominent elements on the page."," "),n.a.createElement("p",null,"We utilized color in particular to display linkages because of the Gestalt laws of similarity. We knew there would be many links in each document, and the linkages between paragraphs would still need to be quickly apparent in this scenario. Color, rather than symbols or other categorization schema, are easily learned and intuitive."),n.a.createElement("div",{className:"portfolio-subheader highlight-text"},"Key Design Choice 3: Default States"),n.a.createElement("div",null,'The applcation idea is not one with which users are already familiar, so using the app is in some ways a learning process for the user. Because we wanted to highlight the usefulness of the linkages, without which our application is just a dual-paneled text editor, we decided that links should be auto-generated at the start if documents are uploaded on both sides. In turn, scrolling would start "ON," so as to show the advantages of having aligned scrolling.'," "),n.a.createElement("p",null,"Yet, given the translators' comments that technology has a tendency to overstep or be intrusive to the actual workflow, we decided that translation suggestions or the ability to have clicks add links by default would only confuse our users. Thus, the delete and add options start off, and can be used when needed by the user."," "),n.a.createElement("div",{className:"portfolio-header"},"Conclusion"),n.a.createElement("div",null,"Adapt introduces a new way to consider translation, as linkages between paragraphs, while also staying attuned to translators' existing mental models that have been learned and reinforced through translation experience. The takeaway from this project, then, beyond additional JavaScript practice, becomes how to introduce helpful technology without necessarily disrupting existing industries or modes of thinking."," "))},55:function(e,t,a){"use strict";var o=a(0),n=a.n(o),i=a(15),l=a(16);a(13);t.a=({image:e,width:t,height:a,title:o,subtitle:r,codeLink:s,siteLink:h,description:c,children:d})=>n.a.createElement("div",{className:"ui-portfolio-full"},n.a.createElement(i.a,{uiPortfolio:!0}),n.a.createElement("div",{className:"portfolio-content"},n.a.createElement("div",{className:"portfolio-img-holder"},n.a.createElement("img",{className:"portfolio-img",src:e,width:t||"50%",height:a||"auto"})),n.a.createElement("div",{className:"portfolio-title"},o),n.a.createElement("div",{className:"portfolio-subtitle"},r),n.a.createElement("span",{className:"portfolio-links"},s&&n.a.createElement("a",{className:"openPrevent",target:"_blank",href:s},"code"),h&&s&&n.a.createElement("br",null),h&&n.a.createElement("a",{className:"openPrevent",target:"_blank",href:h},"site")),n.a.createElement("div",{className:"portfolio-description"},c),n.a.createElement("div",{className:"portfolio-more"},d)),n.a.createElement(l.a,{back:"resume",next:"contact"}))}}]);